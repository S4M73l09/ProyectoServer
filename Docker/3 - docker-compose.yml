
services:
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    restart: unless-stopped
    network_mode: host # Usa la red del host (incluye VPN)
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - /home/Samuel/videos:/media # ruta real en el servidor de series y peliculas
    environment:
      - PUID=1000
      - PGID=1000

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    network_mode: host
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
        GF_SECURITY_ADMIN_USER: ${GF_USER} #Usa variables creadas en el Archivo de Grafana.env
        GF_SECURITY_ADMIN_PASSWORD: ${GF_PASS} #Usa variables creadas en el Archivo de Grafana.env
  
  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    restart: unless-stopped
    network_mode: host
    pid: host
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'


  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /var/lib/docker/:/var/lib/docker:ro
